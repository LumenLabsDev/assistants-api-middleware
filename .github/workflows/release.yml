name: Release

on:
  release:
    types: [created]

jobs:
  docker:
    runs-on: ubuntu-latest
    if: ${{ github.event.release.target_commitish == 'main' }}
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: meta
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/assistants-api-middleware:latest
            ghcr.io/${{ github.repository_owner }}/assistants-api-middleware:${{ steps.meta.outputs.version }}

      - name: Build amd64 image tar
        run: |
          docker buildx build --platform linux/amd64 -t ghcr.io/${{ github.repository_owner }}/assistants-api-middleware:${{ steps.meta.outputs.version }} --output type=docker,dest=assistants-api-middleware_${{ steps.meta.outputs.version }}_linux-amd64.tar .

      - name: Upload image tar to release
        uses: softprops/action-gh-release@v2
        with:
          files: assistants-api-middleware_${{ steps.meta.outputs.version }}_linux-amd64.tar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


